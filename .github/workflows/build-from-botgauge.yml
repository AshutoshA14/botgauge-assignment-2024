name: Build Hello from Botgauge application 

on:

 workflow_dispatch:

 push:
  branches:
    - '3-cicd-pipeline-setup-via-gha'
#  pull_request:
#   branches:
#    - '3-cicd-pipeline-setup-via-gha'

jobs:
  build:
   runs-on: ubuntu-latest
  

   steps:
     - name: Checkout Code
       uses: actions/checkout@v4
       with:
        fetch-depth: 0

     - name: Set up Go
       uses: actions/setup-go@v5
       with:
        go-version-file: 'go_app/go.mod' # The Go version to download (if necessary) and use.
      
     - name: Go version
       run: go version

     - name: Cache Go module
       uses: actions/cache@v3
       with:
        path: |
           ~/.cache/go-build
           ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
             ${{ runner.os }}-go-

     - name: SonarQube code scanning
       uses: sonarsource/sonarqube-scan-action@master
       env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

     - name: Install dependencies
       working-directory: ./go_app
       run: |
            go mod download 

     - name: Build the Go application
       working-directory: ./go_app
       run: |
           sudo mkdir -p build_artifact
           go build -o /build_artifact/hello-from-botgauge
           ls -la build_artifact
      

     - name: Upload build Artifact
       uses: actions/upload-artifact@v4
       with:
            name: hello-from-botgauge
            path: build_artifact/
